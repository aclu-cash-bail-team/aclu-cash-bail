{"version":3,"sources":["src/js/classes/Table.js","src/js/data.js","src/js/index.js"],"names":["VIEW_ALL","VIEW_LESS","Cell","className","element","document","createElement","setElementClass","TextCell","content","render","appendChild","createTextNode","StyledTextCell","toLocaleString","NumberCell","toFixed","BarGraphCell","data","average","range","bar","style","width","label","diff","textContent","averageLine","left","NumberLineCell","averages","vizColors","forEach","value","i","point","HeaderCell","sortCol","sortDir","initSort","table","id","addEventListener","classNameWithSort","getClassName","setSortColumn","setSortDirection","sort","cell","sortClass","addSorted","sorted","VizHeaderCell","start","end","unit","startText","Math","round","endText","startElement","createTickElement","endElement","averageElements","length","map","text","toLowerCase","averageWrapper","averageColor","wrapper","innerHTML","includes","toString","paddingLeft","line","HeaderRow","cells","row","BodyRow","outlier","isHidden","Table","columnConfigs","tableContainer","isVisible","classNames","config","class","headers","header","container","getElementsByTagName","showOutliers","validate","searchCols","searchable","searchTerms","isTruncated","sortCols","sortable","getHeaderRow","init","Error","some","searchMenu","getElementsByClassName","searchOptions","flatMap","searchOption","innerText","e","searchValue","target","split","filter","s","rows","getRows","viewAllButton","outlierButtons","toggleOutliers","classList","add","remove","headerCells","numVisibleRows","j","CellType","matchesSearchTerm","searchTerm","Number","replace","initialSort","clearedSortedCells","a","b","toNumber","tbody","SwitchableTable","leftTable","rightTable","showRightTable","bind","showLeftTable","show","hide","BAIL_RATE_DATA","BAIL_RACE_RATE_DATA","ROR_RATE_DATA","BAIL_RACE_AMOUNT_DATA","createBailRateTable","getElementById","createRorRateTable","createBailRaceRateTable","createBailRaceAmountTable","bailRateTable","rorRateTable","rateContainer","bailRaceRateTable","bailRaceAmountTable","raceContainer"],"mappings":"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,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,GACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,aAGJ,WACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,KAGJ,GACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,aACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,aAGJ,WACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,aACA,CACU,KAAA,MACE,OAAA,CACR,aAGJ,WACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,MACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,OACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,GACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,aACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,YACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,aACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,YACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,aACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,cACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,iBACA,CACU,KAAA,MACE,OAAA,CACR,KAGJ,GACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,eACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,MACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,OACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,aACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,KAGJ,GACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,GACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,cACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,aACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,eACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,OACA,CACU,KAA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ACN,UACA,CACU,KAAA,OACE,OAAA,CACR,OACA,cAGJ,OACA,YACA,CACU,KAAA,SACK,UAAA,gBACJ,MAAA,SAGF,SAAA,GAEb,CACU,KAAA,CACN,MACA,CACU,KAAA,OACE,OAAA,CACR,YACA,cAGJ,YACA,YACA,CACU,KAAA,SACK,UAAA,gBACJ,MAAA,SAGF,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,OACE,OAAA,CACR,YACA,cAGJ,YACA,YACA,CACU,KAAA,SACK,UAAA,gBACJ,MAAA,SAGF,SAAA,IAo/BR,QAAA,oBAAA,EAh/BA,IAAMC,EAAgB,CAC3B,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,aAGJ,WACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,YACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,YACA,CACU,KAAA,MACE,OAAA,CACR,YAGJ,UACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,GACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,GACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,IAGJ,EACA,EACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,aAGJ,WACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,aACA,CACU,KAAA,MACE,OAAA,CACR,eAGJ,aACA,EACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,aAGJ,WACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,aACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,GACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,MACA,CACU,KAAA,MACE,OAAA,CACR,IAGJ,EACA,EACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,OACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,GACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,GACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,aACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,YACA,CACU,KAAA,MACE,OAAA,CACR,eAGJ,aACA,EACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,GACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,aACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,YACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,aAGJ,WACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,GACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,GACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,aAGJ,WACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,EACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,aACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,cACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,iBACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,eACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,MACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,OACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,GACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,aACA,CACU,KAAA,MACE,OAAA,CACR,aAGJ,WACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,GACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,GACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,WACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,EACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,cACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,EACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,aACA,CACU,KAAA,MACE,OAAA,CACR,aAGJ,WACA,KACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,IACA,KAES,SAAA,GAEb,CACU,KAAA,CACN,eACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,EACA,MAES,SAAA,GAEb,CACU,KAAA,CACN,OACA,CACU,KAAA,MACE,OAAA,CACR,cAGJ,YACA,KACA,OAES,SAAA,IAIR,QAAA,cAAA,EAAA,IAAMC,EAAwB,CACnC,CACU,KAAA,CACN,QACA,CACU,KAAA,OACE,OAAA,CACR,MACA,QAGJ,UACA,UACA,CACU,KAAA,SACK,UAAA,gBACJ,MAAA,YAGF,SAAA,GAEb,CACU,KAAA,CACN,YACA,CACU,KAAA,OACE,OAAA,CACR,MACA,QAGJ,UACA,UACA,CACU,KAAA,SACK,UAAA,gBACJ,MAAA,YAGF,SAAA,GAEb,CACU,KAAA,CACN,YACA,CACU,KAAA,OACE,OAAA,CACR,MACA,QAGJ,UACA,UACA,CACU,KAAA,SACK,UAAA,gBACJ,MAAA,YAGF,SAAA,GAEb,CACU,KAAA,CACN,SACA,CACU,KAAA,OACE,OAAA,CACR,MACA,QAGJ,UACA,UACA,CACU,KAAA,SACK,UAAA,gBACJ,MAAA,aAGF,SAAA,GAEb,CACU,KAAA,CACN,UACA,CACU,KAAA,OACE,OAAA,CACR,MACA,QAGJ,UACA,UACA,CACU,KAAA,SACK,UAAA,gBACJ,MAAA,aAGF,SAAA,GAEb,CACU,KAAA,CACN,QACA,CACU,K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","file":"js.72650e16.js","sourceRoot":"..","sourcesContent":["const VIEW_ALL = \"view all\";\nconst VIEW_LESS = \"view less\";\n\nclass Cell {\n  constructor(className) {\n    this.className = className;\n  }\n\n  render() {\n    this.element = document.createElement(\"td\");\n    this.setElementClass(this.className);\n  }\n\n  getClassName() {\n    return this.className;\n  }\n\n  setElementClass(className) {\n    this.element.className = className;\n  }\n}\n\n\nclass TextCell extends Cell {\n  constructor(content, className) {\n    super(className);\n    this.content = content;\n    this.render();\n  }\n\n  render() {\n    super.render();\n    this.element.appendChild(document.createTextNode(this.content));\n  }\n}\n\n\nclass StyledTextCell extends Cell {\n  constructor(content, className) {\n    super(`${className} ${content[\"className\"]}`);\n    this.content = content[\"value\"].toLocaleString();\n    this.render();\n  }\n\n  render() {\n    super.render();\n    this.element.appendChild(document.createTextNode(this.content));\n  }\n}\n\n\nclass NumberCell extends Cell {\n  constructor(content, className) {\n    super(className);\n    this.content = content % 1 === 0 ? content.toLocaleString() : content.toFixed(1);\n    this.render();\n  }\n\n  render() {\n    super.render();\n    this.element.appendChild(document.createTextNode(this.content));\n  }\n}\n\n\nclass BarGraphCell extends Cell {\n  constructor(content, className, data) {\n    super(className);\n    // BarGraphCell should only ever be passed one number\n    this.content = content[\"values\"][0];\n    this.average = data[\"averages\"][0][\"value\"];\n    this.range = data;\n    this.render();\n  }\n\n  render() {\n    super.render();\n    // create the horizontal bar and scale its width by the value and range\n    const bar = document.createElement(\"div\");\n    bar.className = \"viz-bar\";\n    bar.style.width = `${this.content / this.range[\"end\"] * 100}%`;\n    // label the bar with the difference between value and average\n    const label = document.createElement(\"div\");\n    const diff = this.content - this.average;\n    label.textContent = `${diff > 0 ? \"+\" : \"\"}${diff.toFixed(1)}`;\n    label.className = \"bar-label\";\n    bar.appendChild(label);\n    this.element.appendChild(bar);\n    // add the vertical line denoting the average\n    const averageLine = document.createElement(\"div\");\n    averageLine.className = \"bar-average-line green\";\n    averageLine.style.left = `${this.average / this.range[\"end\"] * 100}%`;\n    this.element.appendChild(averageLine);\n  }\n}\n\n\nclass NumberLineCell extends Cell {\n  constructor(content, className, data) {\n    super(className);\n    this.content = content[\"values\"];\n    this.averages = data[\"averages\"];\n    this.range = data;\n    this.vizColors = [\"green\", \"purple\"];\n    this.render();\n  }\n\n  render() {\n    super.render();\n    // create the number line\n    const bar = document.createElement(\"div\");\n    bar.className = \"viz-number-line\";\n    this.element.appendChild(bar);\n    // create the points on the number line\n    this.content.forEach((value, i) => {\n      const point = document.createElement(\"div\");\n      point.className = `viz-number-line-point ${this.vizColors[i]}`;\n      point.style.left = `${(value - this.range[\"start\"]) / this.range[\"end\"] * 100}%`;\n      this.element.appendChild(point);\n    });\n    // add the vertical line denoting the average\n    this.averages.forEach((average, i) => {\n      const averageLine = document.createElement(\"div\");\n      averageLine.className = `bar-average-line ${this.vizColors[i]}`;\n      averageLine.style.left = `${(average[\"value\"] - this.range[\"start\"]) / this.range[\"end\"] * 100}%`;\n      this.element.appendChild(averageLine);\n    });\n  }\n}\n\n\nclass HeaderCell extends Cell {\n  constructor(content, className, sortCol, sortDir, initSort, table, id) {\n    super(className);\n    this.content = content;\n    this.sortCol = sortCol;\n    this.sortDir = sortDir;\n    this.initSort = initSort;\n    this.table = table;\n    this.id = id;\n    this.render();\n\n    // add event listener for sorting\n    if (this.sortCol) {\n      this.element.addEventListener(\"click\", () => {\n        const classNameWithSort = this.getClassName();\n        this.table.setSortColumn(this.id);\n        this.table.setSortDirection(this.sortDir);\n        this.table.sort(false);\n        // after sorting set the class to ensure its the only column highlighted\n        this.setElementClass(classNameWithSort, true);\n        // toggle sort direction for the next click\n        this.sortDir *= -1;\n      });\n    }\n\n    // if we're initializing this sort, update sortDir for the next click\n    if (this.initSort) {\n      this.sortDir *= -1;\n    }\n  }\n\n  render() {\n    const cell = document.createElement(\"th\");\n    cell.className = this.className;\n    cell.appendChild(document.createTextNode(this.content));\n    this.element = cell;\n    if (this.sortCol) {\n      const classNameWithSort = this.getClassName();\n      this.setElementClass(classNameWithSort, this.initSort);\n    }\n  }\n\n  getClassName() {\n    const sortClass = this.sortDir > 0 ? \"sort-asc\" :\n      this.sortDir < 0 ? \"sort-desc\" : \"\";\n    return `${this.className} ${sortClass}`;\n  }\n\n  setElementClass(className, addSorted) {\n    const sorted = addSorted ? \"sorted\" : \"\";\n    super.setElementClass(`${className} ${sorted}`);\n  }\n}\n\n\nclass VizHeaderCell extends HeaderCell {\n  constructor(data, className, sortCol, sortDir, initSort, table, id) {\n    super(data, className, sortCol, sortDir, initSort, table, id);\n  }\n\n  render() {\n    const vizColors = [\"green\", \"purple\"];\n    const start = this.content[\"start\"];\n    const end = this.content[\"end\"];\n    const averages = this.content[\"averages\"];\n    const unit = this.content[\"unit\"];\n\n    const cell = document.createElement(\"th\");\n    cell.className = this.className;\n    // create start, end, and average tick/number elements\n    const startText = unit === \"dollars\" ? `$${Math.round(start / 1000)}K` : start;\n    const endText = unit === \"dollars\" ? `$${Math.round(end / 1000)}K` : end;\n    const startElement = this.createTickElement(startText, \"start-num\");\n    const endElement = this.createTickElement(endText, \"end-num\");\n    const multiple = averages.length > 1;\n    const averageElements = averages.map((average, i) => {\n      let text = \"\";\n      if (unit === \"percent\") {\n        text = `${average[\"name\"]}<br>${average[\"value\"].toFixed(1)}%`;\n      } else if (unit === \"dollars\") {\n        text =`${average[\"name\"]}<br>$${Math.round(average[\"value\"] / 1000)}K`;\n      }\n      const className = `average ${average[\"name\"].toLowerCase()}`;\n      return this.createTickElement(text, className, vizColors[i]);\n    });\n    // create wrapper around averages for positioning\n    const averageWrapper = document.createElement(\"div\");\n    averageWrapper.className = \"average-wrapper\";\n    // offset the average elements by the value/end ratio (and subtract padding)\n    averageElements.forEach((element, i) => {\n      element.style.left = `calc(${(averages[i][\"value\"] - start) / end * 100}%)`;\n      averageWrapper.appendChild(element);\n    });\n    // add all the elements to the cell\n    [startElement, endElement, averageWrapper].forEach(element => {\n      cell.appendChild(element);\n    });\n    this.element = cell;\n  }\n\n  createTickElement(content, className, averageColor) {\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = className;\n    const text = document.createElement(\"div\");\n    text.innerHTML = content;\n    if (className.includes(\"average\")) text.className = \"average-text\";\n    wrapper.appendChild(text);\n    // adjust padding based on number of digits\n    if (className === \"start-num\" && content.toString().length === 1) {\n      wrapper.style.paddingLeft = `${4}px`;\n    }\n\n    // create the vertical tick underneath the number\n    const line = document.createElement(\"div\");\n    line.className = `${className.includes(\"average\") ? \"average-line\" : \"viz-line\"}`;\n    if (averageColor) line.className += ` ${averageColor}`;\n    wrapper.appendChild(line);\n    return wrapper;\n  }\n}\n\n\nclass HeaderRow {\n  constructor(cells) {\n    this.cells = cells;\n    this.render();\n  }\n\n  render() {\n    const row = document.createElement(\"tr\");\n    this.cells.forEach(cell => {\n      row.appendChild(cell.element);\n    });\n    this.element = row;\n  }\n\n  clearedSortedCells() {\n    this.cells.forEach(cell => {\n      const className = cell.getClassName();\n      cell.setElementClass(className, false);\n    });\n  }\n}\n\n\nclass BodyRow {\n  constructor(cells, outlier, isHidden) {\n    this.cells = cells;\n    this.outlier = outlier;\n    this.isHidden = isHidden;\n    this.render();\n  }\n\n  setIsHidden(isHidden) {\n    this.isHidden = isHidden;\n  }\n\n  render(sorted) {\n    const row = document.createElement(\"tr\");\n    if (this.isHidden) {\n      row.className = \"hidden\";\n    } else {\n      row.className = \"\";\n      this.cells.forEach((cell, i) => {\n        cell.setElementClass(\n          i === sorted ? `${cell.className} sorted` : cell.className\n        );\n        row.appendChild(cell.element);\n      });\n    }\n    this.element = row;\n  }\n}\n\n\nexport class Table {\n  constructor(data, columnConfigs, initSort, tableContainer, isVisible = true) {\n    this.classNames = columnConfigs.map((config) => config.class);\n    this.headers = columnConfigs.map((config) => config.header);\n    this.data = data;\n    this.container = tableContainer;\n    this.element = tableContainer.getElementsByTagName(\"table\")[0];\n    this.showOutliers = false;\n\n    this.validate(this.data, this.classNames, this.headers);\n    this.searchCols = columnConfigs.map((config) => config.searchable);\n    this.searchTerms = [];\n    this.isTruncated = true;\n\n    this.sortCols = columnConfigs.map((config) => config.sortable);\n    // start with sorting descending\n    this.sortCol = initSort;\n    this.sortDir = -1;\n\n    this.isVisible = isVisible;\n    this.header = this.getHeaderRow();\n\n    this.init(); // Initial table DOM setup\n    this.sort(true); // this initial sort populates this.rows\n\n  }\n\n  validate(data, classNames, headers) {\n    if (classNames.length !== headers.length) {\n      throw new Error(\"Number of class names does not match number of headers\");\n    }\n    if (data.some(row => row.data.length != headers.length)) {\n      throw new Error(`${headers.length} columns of data required`);\n    }\n  }\n\n  init() {\n    // create header row\n    const thead = this.element.getElementsByTagName(\"thead\")[0];\n    thead.appendChild(this.header.element);\n\n    // set up search bar\n    const searchMenu = this.container.getElementsByClassName(\"menu\")[0];\n    const searchOptions = this.data.flatMap((row) =>\n      row.data.flatMap((value, i) => this.searchCols[i] ? [value] : [])\n    );\n    // Current behavior is to alphabetically sort all options,\n    // potentially mixing values from different columns\n    // TODO: Consider dividing values by column\n    searchOptions.sort();\n    searchMenu.textContent = \"\";\n    searchOptions.forEach(searchOption => {\n      const element = document.createElement(\"div\");\n      element.className = \"item\";\n      element.innerText = searchOption;\n      searchMenu.appendChild(element);\n    });\n    const searchInput = this.container.getElementsByTagName(\"input\")[0];\n    searchInput.addEventListener(\"change\", e => {\n      const searchValue = e.target.value;\n      this.searchTerms = searchValue.split(\",\").filter(s => s !== \"\");\n      this.rows = this.getRows();\n      this.render();\n    });\n\n    // set up view all button\n    const viewAllButton = this.container.getElementsByClassName(\"view-all-btn\")[0];\n    viewAllButton.innerText = this.isTruncated ? VIEW_ALL : VIEW_LESS;\n    viewAllButton.addEventListener(\"click\", () => {\n      this.isTruncated = !this.isTruncated;\n      viewAllButton.innerText = this.isTruncated ? VIEW_ALL : VIEW_LESS;\n      this.rows = this.getRows();\n      this.render();\n    });\n\n    // set up outlier button\n    const outlierButtons = this.container.getElementsByClassName(\"outliers-btn\");\n    if (outlierButtons.length > 0) {\n      const outlierButton = outlierButtons[0];\n\n      outlierButton.addEventListener(\"click\", (e) => {\n        if (this.toggleOutliers()) {\n          e.target.classList.add(\"showing\");\n        } else {\n          e.target.classList.remove(\"showing\");\n        }\n      });\n    }\n  }\n\n  getHeaderRow() {\n    const headerCells = this.headers.map((header, i) => {\n      const CellType = typeof(header) == \"string\" ? HeaderCell : VizHeaderCell;\n      return new CellType(\n        header,\n        this.classNames[i],\n        this.sortCols[i],\n        // 1 designates ascending; -1, descending (default); 0, not sortable\n        this.sortCols[i] ? -1 : 0,\n        i === this.sortCol,\n        this,\n        i\n      );\n    });\n    return new HeaderRow(headerCells);\n  }\n\n  getRows() {\n    let numVisibleRows = 0;\n    return this.data.map((row, i) => {\n      // Specify how data will be rendered\n      const cells = row.data.map((cell, j) => {\n        let CellType = TextCell;\n        if (typeof(cell) == \"number\") {\n          CellType = NumberCell;\n        } else if (typeof(cell) == \"object\") {\n          if (cell[\"type\"] === \"bar\") {\n            CellType = BarGraphCell;\n          } else if (cell[\"type\"] === \"line\") {\n            CellType = NumberLineCell;\n          } else if (cell[\"type\"] === \"styled\") {\n            CellType = StyledTextCell;\n          }\n        }\n        // for county names, append an asterisk if it's an outlier\n        if (j === 0 && row.outlier) cell += \"*\";\n        return new CellType(cell, this.classNames[j], this.headers[j]);\n      });\n      const isHidden = (this.isTruncated && numVisibleRows >= 10) ||\n        (row.outlier && !this.showOutliers) || !this.matchesSearchTerm(row);\n      if (!isHidden) numVisibleRows++;\n      return new BodyRow(cells, row.outlier, isHidden);\n    });\n  }\n\n  matchesSearchTerm(row) {\n    if (this.searchTerms.length == 0) {\n      return true;\n    }\n    return this.searchTerms.some(searchTerm =>\n      row.data.some((value, i) =>\n        // Search term is selected from dropdown so\n        // is guaranteed to be equal to a value\n        this.searchCols[i] && value.toLowerCase() === searchTerm.toLowerCase()\n      )\n    );\n  }\n\n  setSortColumn(i) {\n    this.sortCol = i;\n  }\n\n  setSortDirection(sortDir) {\n    this.sortDir = sortDir;\n  }\n\n  toNumber(data) {\n    const value = typeof(data) === \"object\" ? data[\"value\"] : data;\n    return Number(value.replace ? value.replace(/[^\\d.-]/g, \"\") : value);\n  }\n\n  sort(initialSort) {\n    if (!initialSort) this.header.clearedSortedCells();\n\n    this.data.sort((a, b) => {\n      const i = this.toNumber(a.data[this.sortCol]);\n      const j = this.toNumber(b.data[this.sortCol]);\n      if (i < j) {\n        return this.sortDir * -1;\n      } else if (i > j) {\n        return this.sortDir;\n      } else {\n        return 0;\n      }\n    });\n    this.rows = this.getRows();\n    this.render();\n  }\n\n  toggleOutliers() {\n    this.showOutliers = !this.showOutliers;\n    this.rows = this.getRows();\n    this.render();\n    return this.showOutliers;\n  }\n\n  hide() {\n    this.isVisible = false;\n    this.render();\n  }\n\n  show() {\n    this.isVisible = true;\n    this.render();\n  }\n\n  render() {\n    if (!this.isVisible) {\n      this.container.classList.add(\"hidden\");\n    } else {\n      this.container.classList.remove(\"hidden\");\n\n      // clear rows\n      const tbody = this.element.getElementsByTagName(\"tbody\")[0];\n      tbody.textContent = \"\";\n\n      // repopulate with updated rows\n      this.rows.forEach(row => {\n        row.render(this.sortCol);\n        tbody.appendChild(row.element);\n      });\n    }\n  }\n}\n\nexport class SwitchableTable {\n  constructor(leftTable, rightTable, container) {\n    this.leftTable = leftTable;\n    this.rightTable = rightTable;\n    this.container = container;\n\n    // set up switch buttons\n    const rightSwitch =\n      this.leftTable.container\n        .getElementsByClassName(\"switch-container\")[0]\n        .getElementsByClassName(\"right\")[0];\n    rightSwitch.addEventListener(\"click\", this.showRightTable.bind(this));\n\n    const leftSwitch =\n      this.rightTable.container\n        .getElementsByClassName(\"switch-container\")[0]\n        .getElementsByClassName(\"left\")[0];\n    leftSwitch.addEventListener(\"click\", this.showLeftTable.bind(this));\n\n    // show left table by default\n    this.showLeftTable();\n  }\n\n  showLeftTable() {\n    this.leftTable.show();\n    this.rightTable.hide();\n  }\n\n  showRightTable() {\n    this.rightTable.show();\n    this.leftTable.hide();\n  }\n}\n","/*\n * To get the data in this format, export a CSV with the columns in the order\n * you want. In the case of BAIL_RACE_DATA, I had [county, black %, white %,\n * difference]. I pasted the contents of the CSV into this file (you can wrap\n * multi-line strings in ``) and created the following script to convert from\n * that string to the output array. JSON.stringify will output something with\n * no spacing, so i just pasted the result into a JSON formatter to get the\n * desired format (https://jsonformatter.org).\n *\n * const excelData = ``;\n * const data = [];\n * const lines = excelData.split(\"\\n\");\n * lines.forEach((line, i) => {\n *   const cells = line.split(\",\");\n *   const diff = parseFloat(cells[3]);\n *   const entry = {\n *     \"data\": [\n *       cells[0], // county\n *       {\n *         \"type\": \"line\", // visualization\n *         \"values\": [parseFloat(cells[1]), parseFloat(cells[2])]\n *       },\n *       parseFloat(cells[1]), // black cash bail rate\n *       parseFloat(cells[2]), // white cash bail rate\n *       `${diff > 0 ? \"+\" : \"\"}${diff.toFixed(1)}` // overall rate\n *     ],\n *     \"outlier\": false\n *   };\n *   data.push(entry);\n * });\n *\n * console.log(JSON.stringify(data));\n */\n\nexport const BAIL_RATE_DATA = [\n  {\n    \"data\": [\n      \"Adams\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          30.18867925\n        ]\n      },\n      30.18867925,\n      775,\n      2537\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Allegheny\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          43.50802205\n        ]\n      },\n      43.50802205,\n      13884,\n      31723\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Armstrong\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          41.05888709\n        ]\n      },\n      41.05888709,\n      742,\n      1808\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Beaver\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          49.05179283\n        ]\n      },\n      49.05179283,\n      4959,\n      5967\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Bedford\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          38.63636364\n        ]\n      },\n      38.63636364,\n      563,\n      1460\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Berks\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          50.92425977\n        ]\n      },\n      50.92425977,\n      6036,\n      11688\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Blair\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          34.04638145\n        ]\n      },\n      34.04638145,\n      1674,\n      4826\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Bradford\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          45.49865229\n        ]\n      },\n      45.49865229,\n      824,\n      1805\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Bucks\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          32.41325938\n        ]\n      },\n      32.41325938,\n      4959,\n      15185\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Butler\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          31.15234375\n        ]\n      },\n      31.15234375,\n      626,\n      2017\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Cambria\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          44.29388101\n        ]\n      },\n      44.29388101,\n      2059,\n      4613\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Cameron\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          21.67832168\n        ]\n      },\n      21.67832168,\n      30,\n      112\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Carbon\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          32.99299883\n        ]\n      },\n      32.99299883,\n      1098,\n      3307\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Centre\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          26.08333333\n        ]\n      },\n      26.08333333,\n      871,\n      3370\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Chester\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          38.0970325\n        ]\n      },\n      38.0970325,\n      3968,\n      10351\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Clarion\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          40\n        ]\n      },\n      40,\n      487,\n      1193\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Clearfield\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          36.28318584\n        ]\n      },\n      36.28318584,\n      734,\n      2002\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Clinton\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          36.92628651\n        ]\n      },\n      36.92628651,\n      527,\n      1421\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Columbia\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          38.18897638\n        ]\n      },\n      38.18897638,\n      667,\n      1722\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Crawford\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          28.8973384\n        ]\n      },\n      28.8973384,\n      225,\n      768\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Cumberland\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          38.5278224\n        ]\n      },\n      38.5278224,\n      2593,\n      6732\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Dauphin\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          42.44132779\n        ]\n      },\n      42.44132779,\n      5850,\n      13585\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Delaware\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          55.68060922\n        ]\n      },\n      55.68060922,\n      9514,\n      16808\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Elk\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          28.62318841\n        ]\n      },\n      28.62318841,\n      229,\n      799\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Erie\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          43.95330739\n        ]\n      },\n      43.95330739,\n      2750,\n      6198\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Fayette\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          44.27074081\n        ]\n      },\n      44.27074081,\n      2463,\n      5546\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Forest\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          34.75609756\n        ]\n      },\n      34.75609756,\n      50,\n      123\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Franklin\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          37.47902685\n        ]\n      },\n      37.47902685,\n      1772,\n      4681\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Fulton\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          28.67298578\n        ]\n      },\n      28.67298578,\n      113,\n      383\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Greene\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          37.44343891\n        ]\n      },\n      37.44343891,\n      324,\n      834\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Huntingdon\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          38.96907216\n        ]\n      },\n      38.96907216,\n      552,\n      1353\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Indiana\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          35.01070664\n        ]\n      },\n      35.01070664,\n      322,\n      922\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Jefferson\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          38.55721393\n        ]\n      },\n      38.55721393,\n      460,\n      1166\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Juniata\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          34.46215139\n        ]\n      },\n      34.46215139,\n      168,\n      455\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lackawanna\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          52.63500325\n        ]\n      },\n      52.63500325,\n      3052,\n      5783\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lancaster\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          44.93240475\n        ]\n      },\n      44.93240475,\n      5430,\n      11977\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lawrence\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          48.92407633\n        ]\n      },\n      48.92407633,\n      1182,\n      2398\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lebanon\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          38.70437956\n        ]\n      },\n      38.70437956,\n      2085,\n      5329\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lehigh\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          54.88215488\n        ]\n      },\n      54.88215488,\n      6526,\n      11845\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Luzerne\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          38.28885249\n        ]\n      },\n      38.28885249,\n      3828,\n      9950\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lycoming\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          34.68169761\n        ]\n      },\n      34.68169761,\n      1557,\n      4475\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"McKean\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          42.38134888\n        ]\n      },\n      42.38134888,\n      488,\n      1147\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Mercer\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          36.12542955\n        ]\n      },\n      36.12542955,\n      1653,\n      4571\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Mifflin\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          48.49498328\n        ]\n      },\n      48.49498328,\n      721,\n      1477\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Monroe\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          32.79661017\n        ]\n      },\n      32.79661017,\n      1910,\n      5757\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Montgomery\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          33.63556165\n        ]\n      },\n      33.63556165,\n      6723,\n      19702\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Montour\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          35.19163763\n        ]\n      },\n      35.19163763,\n      100,\n      275\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Northampton\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          45.83529967\n        ]\n      },\n      45.83529967,\n      3804,\n      8234\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Northumberland\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          36\n        ]\n      },\n      36,\n      869,\n      2414\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Perry\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          28.98148148\n        ]\n      },\n      28.98148148,\n      305,\n      1064\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Philadelphia\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          50.12216352\n        ]\n      },\n      50.12216352,\n      32072,\n      63180\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Pike\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          34.16738568\n        ]\n      },\n      34.16738568,\n      382,\n      1109\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Potter\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          23.36601307\n        ]\n      },\n      23.36601307,\n      142,\n      593\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Schuylkill\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          37.74187822\n        ]\n      },\n      37.74187822,\n      2100,\n      5531\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Snyder\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          35.92870544\n        ]\n      },\n      35.92870544,\n      381,\n      1060\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Somerset\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          25\n        ]\n      },\n      25,\n      498,\n      1962\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Sullivan\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          36.44859813\n        ]\n      },\n      36.44859813,\n      36,\n      103\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Susquehanna\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          40.32663317\n        ]\n      },\n      40.32663317,\n      317,\n      783\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Tioga\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          36.38603696\n        ]\n      },\n      36.38603696,\n      868,\n      2385\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Union\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          25.36136662\n        ]\n      },\n      25.36136662,\n      186,\n      743\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Venango\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          37.84477229\n        ]\n      },\n      37.84477229,\n      586,\n      1549\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Warren\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          40.61393152\n        ]\n      },\n      40.61393152,\n      338,\n      831\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Washington\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          38.93688681\n        ]\n      },\n      38.93688681,\n      2596,\n      6615\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Wayne\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          37.20349563\n        ]\n      },\n      37.20349563,\n      286,\n      779\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Westmoreland\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          31.71662559\n        ]\n      },\n      31.71662559,\n      3840,\n      11934\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Wyoming\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          35.68118628\n        ]\n      },\n      35.68118628,\n      377,\n      1056\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"York\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          44.27380952\n        ]\n      },\n      44.27380952,\n      7356,\n      16539\n    ],\n    \"outlier\": false\n  }\n];\nexport const BAIL_RACE_RATE_DATA = [\n  {\n    \"data\": [\n      \"Cameron\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          100,\n          25.45454545\n        ]\n      },\n      100,\n      25.45454545,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+74.5\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Forest\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          85,\n          32.03883495\n        ]\n      },\n      85,\n      32.03883495,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+53\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Potter\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          75,\n          23.24786325\n        ]\n      },\n      75,\n      23.24786325,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+51.8\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Somerset\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          69.56521739,\n          23.20855615\n        ]\n      },\n      69.56521739,\n      23.20855615,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+46.4\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Jefferson\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          72.97297297,\n          38.35252436\n        ]\n      },\n      72.97297297,\n      38.35252436,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+34.6\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Warren\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          70,\n          39.95067818\n        ]\n      },\n      70,\n      39.95067818,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+30\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Sullivan\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          62.5,\n          32.63157895\n        ]\n      },\n      62.5,\n      32.63157895,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+29.9\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Wayne\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          64.86486486,\n          35.30997305\n        ]\n      },\n      64.86486486,\n      35.30997305,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+29.6\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Blair\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          58.6998088,\n          31.76853358\n        ]\n      },\n      58.6998088,\n      31.76853358,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+26.9\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lycoming\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          55.01355014,\n          28.14726841\n        ]\n      },\n      55.01355014,\n      28.14726841,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+26.9\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Susquehanna\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          66.66666667,\n          39.76377953\n        ]\n      },\n      66.66666667,\n      39.76377953,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+26.9\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Erie\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          63.73239437,\n          37.02714731\n        ]\n      },\n      63.73239437,\n      37.02714731,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+26.7\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Cambria\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          65.52083333,\n          39.14590747\n        ]\n      },\n      65.52083333,\n      39.14590747,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+26.4\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Huntingdon\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          64.05228758,\n          37.83333333\n        ]\n      },\n      64.05228758,\n      37.83333333,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+26.2\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Crawford\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          53.33333333,\n          28.3197832\n        ]\n      },\n      53.33333333,\n      28.3197832,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+25\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Centre\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          46.74115456,\n          21.88492764\n        ]\n      },\n      46.74115456,\n      21.88492764,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+24.9\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Venango\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          60.13986014,\n          35.56187767\n        ]\n      },\n      60.13986014,\n      35.56187767,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+24.6\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Clearfield\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          59.30232558,\n          35.64718163\n        ]\n      },\n      59.30232558,\n      35.64718163,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+23.7\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Armstrong\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          62.71186441,\n          39.52662722\n        ]\n      },\n      62.71186441,\n      39.52662722,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+23.2\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Northumberland\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          56.81818182,\n          33.91066545\n        ]\n      },\n      56.81818182,\n      33.91066545,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+22.9\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lawrence\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          66.28477905,\n          43.4806939\n        ]\n      },\n      66.28477905,\n      43.4806939,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+22.8\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Mifflin\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          70.11494253,\n          47.48201439\n        ]\n      },\n      70.11494253,\n      47.48201439,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+22.6\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Tioga\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          57,\n          34.50800915\n        ]\n      },\n      57,\n      34.50800915,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+22.5\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Allegheny\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          57.06645057,\n          35.29897333\n        ]\n      },\n      57.06645057,\n      35.29897333,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+21.8\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Westmoreland\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          50.05045409,\n          28.61736334\n        ]\n      },\n      50.05045409,\n      28.61736334,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+21.4\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Greene\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          58.97435897,\n          37.86163522\n        ]\n      },\n      58.97435897,\n      37.86163522,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+21.1\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Beaver\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          64.33048433,\n          43.92212726\n        ]\n      },\n      64.33048433,\n      43.92212726,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+20.4\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"McKean\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          61.33333333,\n          41.23134328\n        ]\n      },\n      61.33333333,\n      41.23134328,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+20.1\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Washington\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          55.77092511,\n          35.82116788\n        ]\n      },\n      55.77092511,\n      35.82116788,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+19.9\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Luzerne\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          53.5892323,\n          34.6550856\n        ]\n      },\n      53.5892323,\n      34.6550856,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+18.9\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lackawanna\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          67.1345995,\n          48.9720035\n        ]\n      },\n      67.1345995,\n      48.9720035,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+18.2\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Snyder\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          52.5,\n          34.59183673\n        ]\n      },\n      52.5,\n      34.59183673,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+17.9\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Bradford\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          62.26415094,\n          45.14840183\n        ]\n      },\n      62.26415094,\n      45.14840183,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+17.1\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Cumberland\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          51.61744023,\n          35.0094162\n        ]\n      },\n      51.61744023,\n      35.0094162,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+16.6\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Butler\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          44.7761194,\n          29.5154185\n        ]\n      },\n      44.7761194,\n      29.5154185,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+15.3\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Delaware\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          63.75237882,\n          48.4952381\n        ]\n      },\n      63.75237882,\n      48.4952381,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+15.3\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Bedford\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          52.57731959,\n          37.56419663\n        ]\n      },\n      52.57731959,\n      37.56419663,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+15\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Union\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          38.20224719,\n          23.24159021\n        ]\n      },\n      38.20224719,\n      23.24159021,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+15\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Dauphin\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          51.21710526,\n          36.4556962\n        ]\n      },\n      51.21710526,\n      36.4556962,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+14.8\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Montgomery\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          43.27198364,\n          28.69733969\n        ]\n      },\n      43.27198364,\n      28.69733969,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+14.6\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Adams\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          43.56060606,\n          29.03651562\n        ]\n      },\n      43.56060606,\n      29.03651562,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+14.5\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Chester\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          48.47354138,\n          34.29690666\n        ]\n      },\n      48.47354138,\n      34.29690666,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+14.2\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Franklin\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          49.26553672,\n          35.19494204\n        ]\n      },\n      49.26553672,\n      35.19494204,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+14.1\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"York\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          54.11985019,\n          41.11844787\n        ]\n      },\n      54.11985019,\n      41.11844787,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+13\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Philadelphia\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          56.02170568,\n          43.3107617\n        ]\n      },\n      56.02170568,\n      43.3107617,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+12.7\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lancaster\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          55.54532904,\n          43.07425541\n        ]\n      },\n      55.54532904,\n      43.07425541,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+12.5\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Perry\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          40,\n          27.68130746\n        ]\n      },\n      40,\n      27.68130746,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+12.3\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Mercer\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          45.40337711,\n          33.35235378\n        ]\n      },\n      45.40337711,\n      33.35235378,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+12.1\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Northampton\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          55.7063541,\n          43.86813852\n        ]\n      },\n      55.7063541,\n      43.86813852,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+11.8\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Fayette\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          54,\n          42.30092389\n        ]\n      },\n      54,\n      42.30092389,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+11.7\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Carbon\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          43.7751004,\n          32.34139961\n        ]\n      },\n      43.7751004,\n      32.34139961,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+11.4\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Clinton\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          47.14285714,\n          35.98750976\n        ]\n      },\n      47.14285714,\n      35.98750976,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+11.2\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lebanon\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          48.84547069,\n          37.97733949\n        ]\n      },\n      48.84547069,\n      37.97733949,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+10.9\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Montour\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          46.15384615,\n          35.34136546\n        ]\n      },\n      46.15384615,\n      35.34136546,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+10.8\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Bucks\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          41.06901218,\n          30.62392673\n        ]\n      },\n      41.06901218,\n      30.62392673,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+10.4\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Schuylkill\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          46.5060241,\n          37.27521501\n        ]\n      },\n      46.5060241,\n      37.27521501,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+9.2\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lehigh\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          61.81634031,\n          52.85376562\n        ]\n      },\n      61.81634031,\n      52.85376562,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+9\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Berks\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          58.42078961,\n          50.24259317\n        ]\n      },\n      58.42078961,\n      50.24259317,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+8.2\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Juniata\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          43.75,\n          36.67425968\n        ]\n      },\n      43.75,\n      36.67425968,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+7.1\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Wyoming\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          40,\n          35.59650824\n        ]\n      },\n      40,\n      35.59650824,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+4.4\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Pike\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          37.41007194,\n          34.02061856\n        ]\n      },\n      37.41007194,\n      34.02061856,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+3.4\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Monroe\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          35.13011152,\n          32.41612358\n        ]\n      },\n      35.13011152,\n      32.41612358,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+2.7\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Columbia\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          40.7960199,\n          38.46153846\n        ]\n      },\n      40.7960199,\n      38.46153846,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+2.3\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Fulton\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          31.57894737,\n          29.27536232\n        ]\n      },\n      31.57894737,\n      29.27536232,\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+2.3\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Clarion\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          40.625,\n          40.83259522\n        ]\n      },\n      40.625,\n      40.83259522,\n      {\n        \"type\": \"styled\",\n        \"className\": \"negative-diff\",\n        \"value\": \"-0.2\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Elk\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          27.77777778,\n          28.68117798\n        ]\n      },\n      27.77777778,\n      28.68117798,\n      {\n        \"type\": \"styled\",\n        \"className\": \"negative-diff\",\n        \"value\": \"-0.9\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Indiana\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          30.39215686,\n          36.21169916\n        ]\n      },\n      30.39215686,\n      36.21169916,\n      {\n        \"type\": \"styled\",\n        \"className\": \"negative-diff\",\n        \"value\": \"-5.8\"\n      }\n    ],\n    \"outlier\": false\n  }\n];\n\nexport const ROR_RATE_DATA = [\n  {\n    \"data\": [\n      \"Adams\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          24.8748556\n        ]\n      },\n      24.8748556,\n      631,\n      2537\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Allegheny\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          29.55770303\n        ]\n      },\n      29.55770303,\n      9377,\n      31723\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Armstrong\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          43.273906\n        ]\n      },\n      43.273906,\n      782,\n      1808\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Beaver\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          35.80876494\n        ]\n      },\n      35.80876494,\n      2137,\n      5967\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Bedford\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          1.804812834\n        ]\n      },\n      1.804812834,\n      26,\n      1460\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Berks\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          15.21347947\n        ]\n      },\n      15.21347947,\n      1778,\n      11688\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Blair\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          0.3598560576\n        ]\n      },\n      0.3598560576,\n      17,\n      4826\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Bradford\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          11.53638814\n        ]\n      },\n      11.53638814,\n      208,\n      1805\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Bucks\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          17.70282471\n        ]\n      },\n      17.70282471,\n      2688,\n      15185\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Butler\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          57.27539063\n        ]\n      },\n      57.27539063,\n      1155,\n      2017\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Cambria\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          21.61761592\n        ]\n      },\n      21.61761592,\n      997,\n      4613\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Cameron\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          0\n        ]\n      },\n      0,\n      0,\n      112\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Carbon\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          13.12718786\n        ]\n      },\n      13.12718786,\n      434,\n      3307\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Centre\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          61.55555556\n        ]\n      },\n      61.55555556,\n      2074,\n      3370\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Chester\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          20.7253886\n        ]\n      },\n      20.7253886,\n      2145,\n      10351\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Clarion\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          25.70281124\n        ]\n      },\n      25.70281124,\n      307,\n      1193\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Clearfield\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          0.09832841691\n        ]\n      },\n      0.09832841691,\n      2,\n      2002\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Clinton\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          11.40472879\n        ]\n      },\n      11.40472879,\n      162,\n      1421\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Columbia\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          19.6287964\n        ]\n      },\n      19.6287964,\n      338,\n      1722\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Crawford\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          53.99239544\n        ]\n      },\n      53.99239544,\n      415,\n      768\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Cumberland\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          41.36118008\n        ]\n      },\n      41.36118008,\n      2784,\n      6732\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Dauphin\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          18.47205582\n        ]\n      },\n      18.47205582,\n      2509,\n      13585\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Delaware\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          0.1063889356\n        ]\n      },\n      0.1063889356,\n      18,\n      16808\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Elk\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          0\n        ]\n      },\n      0,\n      0,\n      799\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Erie\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          36.48249027\n        ]\n      },\n      36.48249027,\n      2261,\n      6198\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Fayette\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          0.7816663706\n        ]\n      },\n      0.7816663706,\n      43,\n      5546\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Forest\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          12.80487805\n        ]\n      },\n      12.80487805,\n      16,\n      123\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Franklin\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          50.02097315\n        ]\n      },\n      50.02097315,\n      2341,\n      4681\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Fulton\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          51.42180095\n        ]\n      },\n      51.42180095,\n      197,\n      383\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Greene\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          26.58371041\n        ]\n      },\n      26.58371041,\n      222,\n      834\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Huntingdon\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          29.07216495\n        ]\n      },\n      29.07216495,\n      393,\n      1353\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Indiana\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          30.72805139\n        ]\n      },\n      30.72805139,\n      283,\n      922\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Jefferson\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          0.08291873964\n        ]\n      },\n      0.08291873964,\n      1,\n      1166\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Juniata\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          18.92430279\n        ]\n      },\n      18.92430279,\n      86,\n      455\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Lackawanna\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          1.805465192\n        ]\n      },\n      1.805465192,\n      104,\n      5783\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lancaster\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          15.22326915\n        ]\n      },\n      15.22326915,\n      1823,\n      11977\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lawrence\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          24.68534308\n        ]\n      },\n      24.68534308,\n      592,\n      2398\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lebanon\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          3.52189781\n        ]\n      },\n      3.52189781,\n      188,\n      5329\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lehigh\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          8.111417202\n        ]\n      },\n      8.111417202,\n      961,\n      11845\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Luzerne\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          29.28027748\n        ]\n      },\n      29.28027748,\n      2913,\n      9950\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lycoming\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          0.3315649867\n        ]\n      },\n      0.3315649867,\n      15,\n      4475\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"McKean\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          4.912572856\n        ]\n      },\n      4.912572856,\n      56,\n      1147\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Mercer\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          11.8556701\n        ]\n      },\n      11.8556701,\n      542,\n      4571\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Mifflin\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          0.4682274247\n        ]\n      },\n      0.4682274247,\n      7,\n      1477\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Monroe\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          17.01694915\n        ]\n      },\n      17.01694915,\n      980,\n      5757\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Montgomery\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          14.69809841\n        ]\n      },\n      14.69809841,\n      2896,\n      19702\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Montour\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          39.02439024\n        ]\n      },\n      39.02439024,\n      107,\n      275\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Northampton\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          15.20764512\n        ]\n      },\n      15.20764512,\n      1252,\n      8234\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Northumberland\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          11.87628866\n        ]\n      },\n      11.87628866,\n      287,\n      2414\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Perry\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          41.48148148\n        ]\n      },\n      41.48148148,\n      441,\n      1064\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Philadelphia\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          36.20163088\n        ]\n      },\n      36.20163088,\n      22872,\n      63180\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Pike\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          31.06125971\n        ]\n      },\n      31.06125971,\n      344,\n      1109\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Potter\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          16.50326797\n        ]\n      },\n      16.50326797,\n      98,\n      593\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Schuylkill\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          10.6870229\n        ]\n      },\n      10.6870229,\n      591,\n      5531\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Snyder\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          6.472795497\n        ]\n      },\n      6.472795497,\n      69,\n      1060\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Somerset\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          4.640718563\n        ]\n      },\n      4.640718563,\n      91,\n      1962\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Sullivan\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          1.869158879\n        ]\n      },\n      1.869158879,\n      2,\n      103\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Susquehanna\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          25.50251256\n        ]\n      },\n      25.50251256,\n      200,\n      783\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Tioga\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          13.05954825\n        ]\n      },\n      13.05954825,\n      311,\n      2385\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Union\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          47.70039422\n        ]\n      },\n      47.70039422,\n      354,\n      743\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Venango\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          0.1282873637\n        ]\n      },\n      0.1282873637,\n      2,\n      1549\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Warren\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          42.03069658\n        ]\n      },\n      42.03069658,\n      349,\n      831\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Washington\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          25.6113633\n        ]\n      },\n      25.6113633,\n      1694,\n      6615\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Wayne\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          34.58177278\n        ]\n      },\n      34.58177278,\n      269,\n      779\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Westmoreland\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          32.92518089\n        ]\n      },\n      32.92518089,\n      3929,\n      11934\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Wyoming\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          0.1853568119\n        ]\n      },\n      0.1853568119,\n      2,\n      1056\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"York\",\n      {\n        \"type\": \"bar\",\n        \"values\": [\n          33.30952381\n        ]\n      },\n      33.30952381,\n      5509,\n      16539\n    ],\n    \"outlier\": false\n  }\n];\n\nexport const BAIL_RACE_AMOUNT_DATA = [\n  {\n    \"data\": [\n      \"Adams\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          29479,\n          26077\n        ]\n      },\n      \"$29,479\",\n      \"$26,077\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$3,401\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Allegheny\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          21080,\n          15881\n        ]\n      },\n      \"$21,080\",\n      \"$15,881\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$5,199\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Armstrong\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          18541,\n          13560\n        ]\n      },\n      \"$18,541\",\n      \"$13,560\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$4,981\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Beaver\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          26145,\n          13733\n        ]\n      },\n      \"$26,145\",\n      \"$13,733\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$12,412\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Bedford\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          65010,\n          49176\n        ]\n      },\n      \"$65,010\",\n      \"$49,176\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$15,834\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Berks\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          35039,\n          27399\n        ]\n      },\n      \"$35,039\",\n      \"$27,399\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$7,640\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Blair\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          43726,\n          29256\n        ]\n      },\n      \"$43,726\",\n      \"$29,256\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$14,470\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Bradford\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          63125,\n          32077\n        ]\n      },\n      \"$63,125\",\n      \"$32,077\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$31,048\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Bucks\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          73635,\n          58683\n        ]\n      },\n      \"$73,635\",\n      \"$58,683\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$14,951\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Butler\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          42155,\n          12248\n        ]\n      },\n      \"$42,155\",\n      \"$12,248\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$29,907\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Cambria\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          51483,\n          28879\n        ]\n      },\n      \"$51,483\",\n      \"$28,879\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$22,604\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Cameron\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          10000,\n          26481\n        ]\n      },\n      \"$10,000\",\n      \"$26,481\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"negative-diff\",\n        \"value\": \"-$16,481\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Carbon\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          35236,\n          24452\n        ]\n      },\n      \"$35,236\",\n      \"$24,452\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$10,784\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Centre\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          45976,\n          34614\n        ]\n      },\n      \"$45,976\",\n      \"$34,614\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$11,361\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Chester\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          32205,\n          22836\n        ]\n      },\n      \"$32,205\",\n      \"$22,836\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$9,369\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Clarion\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          14200,\n          20698\n        ]\n      },\n      \"$14,200\",\n      \"$20,698\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"negative-diff\",\n        \"value\": \"-$6,498\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Clearfield\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          43890,\n          23215\n        ]\n      },\n      \"$43,890\",\n      \"$23,215\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$20,675\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Clinton\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          29609,\n          19817\n        ]\n      },\n      \"$29,609\",\n      \"$19,817\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$9,792\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Columbia\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          57747,\n          33130\n        ]\n      },\n      \"$57,747\",\n      \"$33,130\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$24,617\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Crawford\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          32600,\n          21505\n        ]\n      },\n      \"$32,600\",\n      \"$21,505\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$11,095\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Cumberland\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          34037,\n          23281\n        ]\n      },\n      \"$34,037\",\n      \"$23,281\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$10,756\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Dauphin\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          40031,\n          32313\n        ]\n      },\n      \"$40,031\",\n      \"$32,313\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$7,718\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Delaware\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          43250,\n          31974\n        ]\n      },\n      \"$43,250\",\n      \"$31,974\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$11,275\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Elk\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          14375,\n          21093\n        ]\n      },\n      \"$14,375\",\n      \"$21,093\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"negative-diff\",\n        \"value\": \"-$6,718\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Erie\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          38881,\n          23611\n        ]\n      },\n      \"$38,881\",\n      \"$23,611\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$15,270\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Fayette\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          25444,\n          17203\n        ]\n      },\n      \"$25,444\",\n      \"$17,203\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$8,240\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Forest\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          21438,\n          22344\n        ]\n      },\n      \"$21,438\",\n      \"$22,344\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"negative-diff\",\n        \"value\": \"-$906\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Franklin\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          61407,\n          50242\n        ]\n      },\n      \"$61,407\",\n      \"$50,242\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$11,165\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Fulton\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          24000,\n          57879\n        ]\n      },\n      \"$24,000\",\n      \"$57,879\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"negative-diff\",\n        \"value\": \"-$33,879\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Greene\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          20977,\n          15107\n        ]\n      },\n      \"$20,977\",\n      \"$15,107\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$5,870\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Huntingdon\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          22010,\n          18028\n        ]\n      },\n      \"$22,010\",\n      \"$18,028\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$3,982\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Indiana\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          20861,\n          15479\n        ]\n      },\n      \"$20,861\",\n      \"$15,479\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$5,382\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Jefferson\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          35040,\n          45707\n        ]\n      },\n      \"$35,040\",\n      \"$45,707\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"negative-diff\",\n        \"value\": \"-$10,667\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Juniata\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          29167,\n          22330\n        ]\n      },\n      \"$29,167\",\n      \"$22,330\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$6,837\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Lackawanna\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          41104,\n          26940\n        ]\n      },\n      \"$41,104\",\n      \"$26,940\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$14,163\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lancaster\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          57668,\n          48383\n        ]\n      },\n      \"$57,668\",\n      \"$48,383\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$9,285\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lawrence\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          25778,\n          15192\n        ]\n      },\n      \"$25,778\",\n      \"$15,192\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$10,586\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lebanon\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          36343,\n          23902\n        ]\n      },\n      \"$36,343\",\n      \"$23,902\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$12,441\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lehigh\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          25138,\n          16341\n        ]\n      },\n      \"$25,138\",\n      \"$16,341\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$8,797\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Luzerne\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          47113,\n          32968\n        ]\n      },\n      \"$47,113\",\n      \"$32,968\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$14,145\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Lycoming\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          77030,\n          37028\n        ]\n      },\n      \"$77,030\",\n      \"$37,028\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$40,002\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"McKean\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          34911,\n          23475\n        ]\n      },\n      \"$34,911\",\n      \"$23,475\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$11,436\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Mercer\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          29504,\n          23005\n        ]\n      },\n      \"$29,504\",\n      \"$23,005\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$6,500\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Mifflin\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          52219,\n          35331\n        ]\n      },\n      \"$52,219\",\n      \"$35,331\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$16,889\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Monroe\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          34085,\n          21495\n        ]\n      },\n      \"$34,085\",\n      \"$21,495\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$12,591\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Montgomery\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          29169,\n          21885\n        ]\n      },\n      \"$29,169\",\n      \"$21,885\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$7,284\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Montour\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          25556,\n          27449\n        ]\n      },\n      \"$25,556\",\n      \"$27,449\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"negative-diff\",\n        \"value\": \"-$1,893\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Northampton\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          34972,\n          24095\n        ]\n      },\n      \"$34,972\",\n      \"$24,095\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$10,877\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Northumberland\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          63255,\n          38641\n        ]\n      },\n      \"$63,255\",\n      \"$38,641\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$24,614\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Perry\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          41126,\n          24007\n        ]\n      },\n      \"$41,126\",\n      \"$24,007\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$17,119\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Philadelphia\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          54302,\n          43459\n        ]\n      },\n      \"$54,302\",\n      \"$43,459\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$10,843\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Pike\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          34755,\n          21534\n        ]\n      },\n      \"$34,755\",\n      \"$21,534\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$13,221\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Potter\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          15700,\n          19338\n        ]\n      },\n      \"$15,700\",\n      \"$19,338\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"negative-diff\",\n        \"value\": \"-$3,638\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Schuylkill\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          28947,\n          19996\n        ]\n      },\n      \"$28,947\",\n      \"$19,996\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$8,951\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Snyder\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          29659,\n          27551\n        ]\n      },\n      \"$29,659\",\n      \"$27,551\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$2,107\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Somerset\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          78071,\n          33896\n        ]\n      },\n      \"$78,071\",\n      \"$33,896\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$44,175\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Sullivan\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          5000,\n          18667\n        ]\n      },\n      \"$5,000\",\n      \"$18,667\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"negative-diff\",\n        \"value\": \"-$13,667\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Susquehanna\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          29808,\n          27138\n        ]\n      },\n      \"$29,808\",\n      \"$27,138\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$2,670\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Tioga\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          30455,\n          18916\n        ]\n      },\n      \"$30,455\",\n      \"$18,916\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$11,539\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Union\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          34667,\n          25807\n        ]\n      },\n      \"$34,667\",\n      \"$25,807\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$8,860\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Venango\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          48712,\n          35510\n        ]\n      },\n      \"$48,712\",\n      \"$35,510\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$13,202\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Warren\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          32692,\n          25369\n        ]\n      },\n      \"$32,692\",\n      \"$25,369\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$7,323\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"Washington\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          33527,\n          19878\n        ]\n      },\n      \"$33,527\",\n      \"$19,878\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$13,649\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Wayne\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          28682,\n          32101\n        ]\n      },\n      \"$28,682\",\n      \"$32,101\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"negative-diff\",\n        \"value\": \"-$3,419\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Westmoreland\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          30920,\n          17072\n        ]\n      },\n      \"$30,920\",\n      \"$17,072\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$13,848\"\n      }\n    ],\n    \"outlier\": false\n  },\n  {\n    \"data\": [\n      \"Wyoming\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          22611,\n          25042\n        ]\n      },\n      \"$22,611\",\n      \"$25,042\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"negative-diff\",\n        \"value\": \"-$2,431\"\n      }\n    ],\n    \"outlier\": true\n  },\n  {\n    \"data\": [\n      \"York\",\n      {\n        \"type\": \"line\",\n        \"values\": [\n          30258,\n          18416\n        ]\n      },\n      \"$30,258\",\n      \"$18,416\",\n      {\n        \"type\": \"styled\",\n        \"className\": \"positive-diff\",\n        \"value\": \"+$11,842\"\n      }\n    ],\n    \"outlier\": false\n  }\n];","import { Table, SwitchableTable } from \"./classes/Table.js\";\nimport { BAIL_RATE_DATA, BAIL_RACE_RATE_DATA, ROR_RATE_DATA, BAIL_RACE_AMOUNT_DATA } from \"./data.js\";\n\n/* TABLE CREATION FUNCTIONS */\nconst createBailRateTable = () => {\n  const columnConfigs = [\n    {\n      class: \"county-name-cell\",\n      header: \"County\",\n      sortable: false,\n      searchable: true\n    },\n    {\n      class: \"viz-cell\",\n      header: {\n        \"start\": 0,\n        \"end\": 60,\n        \"averages\": [\n          {\n            \"name\": \"Avg.\",\n            \"value\": 42.5966697900,\n          },\n        ],\n        \"unit\": \"percent\"\n      },\n      sortable: false,\n      searchable: false\n    },\n    {\n      class: \"bail-rate-cell number-cell\",\n      header: \"Cash Bail Rate (%)\",\n      sortable: true,\n      searchable: false\n    },\n    {\n      class: \"bail-cases-cell number-cell\",\n      header: \"Cash Bail Cases\",\n      sortable: true,\n      searchable: false\n    },\n    {\n      class: \"total-cases-cell number-cell\",\n      header: \"Total Cases\",\n      sortable: true,\n      searchable: false\n    },\n  ];\n  const initSort = 2; // initially sort by cash bail rate\n  const tableContainer = document.getElementById(\"bail-rate-container\");\n  return new Table(BAIL_RATE_DATA, columnConfigs, initSort, tableContainer, false);\n};\n\nconst createRorRateTable = () => {\n  const columnConfigs = [\n    {\n      class: \"county-name-cell\",\n      header: \"County\",\n      sortable: false,\n      searchable: true\n    },\n    {\n      class: \"viz-cell\",\n      header: {\n        \"start\": 0,\n        \"end\": 75,\n        \"averages\": [\n          {\n            \"name\": \"Avg.\",\n            \"value\": 22.73,\n          }\n        ],\n        \"unit\": \"percent\"\n      },\n      sortable: false,\n      searchable: false\n    },\n    {\n      class: \"ror-rate-cell number-cell\",\n      header: \"ROR Bail Rate (%)\",\n      sortable: true,\n      searchable: false\n    },\n    {\n      class: \"ror-cases-cell number-cell\",\n      header: \"ROR Cases\",\n      sortable: true,\n      searchable: false\n    },\n    {\n      class: \"total-cases-cell number-cell\",\n      header: \"Total Cases\",\n      sortable: true,\n      searchable: false\n    },\n  ];\n  const initSort = 2; // initially sort by ror bail rate\n  const tableContainer = document.getElementById(\"ror-rate-container\");\n  return new Table(ROR_RATE_DATA, columnConfigs, initSort, tableContainer, false);\n};\n\nconst createBailRaceRateTable = () => {\n  const columnConfigs = [\n    {\n      class: \"county-name-cell\",\n      header: \"County\",\n      sortable: false,\n      searchable: true\n    },\n    {\n      class: \"viz-cell\",\n      header: {\n        \"start\": 0,\n        \"end\": 100,\n        \"averages\": [\n          {\n            \"name\": \"Black\",\n            \"value\": 54.7462525,\n          },\n          {\n            \"name\": \"White\",\n            \"value\": 37.87542236,\n          }\n        ],\n        \"unit\": \"percent\"\n      },\n      sortable: false,\n      searchable: false\n    },\n    {\n      class: \"bail-black-cell number-cell\",\n      header: \"% Cash Bail Black\",\n      sortable: true,\n      searchable: false\n    },\n    {\n      class: \"bail-white-cell number-cell\",\n      header: \"% Cash Bail White\",\n      sortable: true,\n      searchable: false\n    },\n    {\n      class: \"diff-cell number-cell\",\n      header: \"Difference\",\n      sortable: true,\n      searchable: false\n    },\n  ];\n  const initSort = 4; // initially sort by difference\n  const tableContainer = document.getElementById(\"bail-race-rate-container\");\n  return new Table(BAIL_RACE_RATE_DATA, columnConfigs, initSort, tableContainer, false);\n};\n\nconst createBailRaceAmountTable = () => {\n  const columnConfigs = [\n    {\n      class: \"county-name-cell\",\n      header: \"County\",\n      sortable: false,\n      searchable: true\n    },\n    {\n      class: \"viz-cell\",\n      header: {\n        \"start\": 10000,\n        \"end\": 80000,\n        \"averages\": [\n          {\n            \"name\": \"Black\",\n            \"value\": 38700.61968,\n          },\n          {\n            \"name\": \"White\",\n            \"value\": 27572.55514,\n          }\n        ],\n        \"unit\": \"dollars\"\n      },\n      sortable: false,\n      searchable: false\n    },\n    {\n      class: \"bail-black-cell number-cell\",\n      header: \"Bail Amt Black\",\n      sortable: true,\n      searchable: false\n    },\n    {\n      class: \"bail-white-cell number-cell\",\n      header: \"Bail Amt White\",\n      sortable: true,\n      searchable: false\n    },\n    {\n      class: \"diff-cell number-cell\",\n      header: \"Difference\",\n      sortable: true,\n      searchable: false\n    },\n  ];\n  const initSort = 4; // initially sort by difference\n  const tableContainer = document.getElementById(\"bail-race-amount-container\");\n  return new Table(BAIL_RACE_AMOUNT_DATA, columnConfigs, initSort, tableContainer, false);\n};\n\n/* RENDER PAGE */\nconst bailRateTable = createBailRateTable();\nconst rorRateTable = createRorRateTable();\n\nconst rateContainer = document.getElementById(\"rate-container\");\nnew SwitchableTable(bailRateTable, rorRateTable, rateContainer);\n\nconst bailRaceRateTable = createBailRaceRateTable();\nconst bailRaceAmountTable = createBailRaceAmountTable();\n\nconst raceContainer = document.getElementById(\"race-container\");\nnew SwitchableTable(bailRaceRateTable, bailRaceAmountTable, raceContainer);\n"]}